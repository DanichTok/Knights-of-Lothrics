// script.js
document.addEventListener("DOMContentLoaded", () => {
    // === 1. –≠–ö–†–ê–ù –ó–ê–ì–†–£–ó–ö–ò (Preloader) ‚Äî 1 –°–ï–ö–£–ù–î–ê ===
    const preloader = document.createElement('div');
    preloader.id = 'preloader';
    preloader.innerHTML = `
        <div class="preloader-content">
            <img src="img/Lothric.svg" alt="Loading..." class="preloader-logo">
            <div class="preloader-text">–ó–∞–≥—Ä—É–∑–∫–∞ —Å–∞–π—Ç–∞... 1 —Å–µ–∫</div>
            <div class="preloader-bar">
                <div class="preloader-progress"></div>
            </div>
        </div>
    `;
    document.body.appendChild(preloader);

    // –ü—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä (1 —Å–µ–∫—É–Ω–¥–∞)
    const progress = preloader.querySelector('.preloader-progress');
    let width = 0;
    const duration = 1000;
    const interval = 10;
    const step = (interval / duration) * 100;

    const timer = setInterval(() => {
        if (width >= 100) {
            clearInterval(timer);
            fadeOutPreloader();
        } else {
            width += step;
            progress.style.width = Math.min(width, 100) + '%';
        }
    }, interval);

    function fadeOutPreloader() {
        preloader.style.opacity = '0';
        setTimeout(() => {
            preloader.remove();
            document.body.style.visibility = 'visible';
            document.body.style.opacity = '1';
        }, 400);
    }

    // –°–∫—Ä—ã–≤–∞–µ–º –∫–æ–Ω—Ç–µ–Ω—Ç –¥–æ –∑–∞–≥—Ä—É–∑–∫–∏
    document.body.style.visibility = 'hidden';
    document.body.style.opacity = '0';
    document.body.style.transition = 'opacity 0.4s ease';

    // === 2. –¢–Å–ú–ù–ê–Ø / –°–í–ï–¢–õ–ê–Ø –¢–ï–ú–ê ===
    const themeKey = 'knights-of-lothric-theme';
    const defaultTheme = 'dark';
    let currentTheme = localStorage.getItem(themeKey) || defaultTheme;

    const themeToggle = document.createElement('button');
    themeToggle.id = 'theme-toggle';
    themeToggle.innerHTML = currentTheme === 'dark' ? '‚òÄÔ∏è' : 'üåô';
    themeToggle.title = currentTheme === 'dark' ? '–°–≤–µ—Ç–ª–∞—è —Ç–µ–º–∞' : '–¢—ë–º–Ω–∞—è —Ç–µ–º–∞';
    document.body.appendChild(themeToggle);

    applyTheme(currentTheme);

    themeToggle.addEventListener('click', () => {
        currentTheme = currentTheme === 'dark' ? 'light' : 'dark';
        applyTheme(currentTheme);
        localStorage.setItem(themeKey, currentTheme);
        themeToggle.innerHTML = currentTheme === 'dark' ? '‚òÄÔ∏è' : 'üåô';
        themeToggle.title = currentTheme === 'dark' ? '–°–≤–µ—Ç–ª–∞—è —Ç–µ–º–∞' : '–¢—ë–º–Ω–∞—è —Ç–µ–º–∞';
    });

    function applyTheme(theme) {
        document.body.setAttribute('data-theme', theme);
    }

    // === 3. –ê–ù–ò–ú–ê–¶–ò–Ø –ü–ï–ß–ê–¢–ò –° –ù–û–í–´–ú–ò –§–†–ê–ó–ê–ú–ò ===
    const textElement = document.querySelector('.text1');
    if (textElement) {
        const phrases = [
            "–ï–±–∞–ª –≤–∞—Å –≤ –∂–æ–ø—É",
            "–ö–æ—à–∞–∫ —Å—ã–Ω –ê–∫–∞–∑–∏–∫–∞",
            "–ê—Ö—É–µ–Ω–Ω—ã–π –∫–ª–∞–Ω",
            "Lothric Never Die",
            "–í–ª–∞–¥ —Å–æ—Å–∏ –±–∏–±—É",
            "–ö—Ä—É—Ç—ã—à–∫–∞ –∫—Ä—É—Ç–∞—è —à–∏—à–∫–∞",
            "–ú–∞—Ä—Ç–∞ —Å–æ—Å–∏",
            "–Ø –∞—Ä–±—É–∑–∏–∫ —è –µ–±–ª–∞–Ω"
        ];
        let phraseIndex = 0;

        function typePhrase(text, callback) {
            let i = 0;
            textElement.textContent = '';
            const typing = setInterval(() => {
                if (i < text.length) {
                    textElement.textContent += text.charAt(i);
                    i++;
                } else {
                    clearInterval(typing);
                    if (callback) callback();
                }
            }, 50);
        }

        function showNextPhrase() {
            const currentPhrase = phrases[phraseIndex];
            typePhrase(currentPhrase, () => {
                setTimeout(() => {
                    phraseIndex = (phraseIndex + 1) % phrases.length;
                    showNextPhrase();
                }, 10000); // 10 —Å–µ–∫—É–Ω–¥ –Ω–∞ —Ñ—Ä–∞–∑—É
            });
        }

        // –ù–∞—á–∏–Ω–∞–µ–º —Å –ø–µ—Ä–≤–æ–π —Ñ—Ä–∞–∑—ã
        showNextPhrase();
    }

    // === 4. SPA-–≠–§–§–ï–ö–¢: –£–õ–£–ß–®–ï–ù–ù–û–ï –ü–õ–ê–í–ù–û–ï –ü–ï–†–ï–ö–õ–Æ–ß–ï–ù–ò–ï –°–¢–†–ê–ù–ò–¶ ===
    document.querySelectorAll('a').forEach(link => {
        if (
            link.getAttribute('href').startsWith('http') ||
            link.closest('.social-links') ||
            link.getAttribute('href').startsWith('#')
        ) {
            return;
        }

        link.addEventListener('click', function (e) {
            e.preventDefault();
            const href = this.getAttribute('href');

            document.body.style.opacity = '0';
            document.body.style.transition = 'opacity 0.6s ease';
            document.body.style.background = document.body.getAttribute('data-theme') === 'dark' ? '#000' : '#fff';

            setTimeout(() => {
                window.location.href = href;
            }, 600);
        });
    });

    // === 5. –ê–ù–ò–ú–ê–¶–ò–ò –ü–†–ò –ù–ê–í–ï–î–ï–ù–ò–ò ===
    const hoverElements = document.querySelectorAll(`
        .url-button,
        .faq-icon,
        .nav-link,
        [href],
        .feature-card,
        .content-card,
        .discord,
        .social-links img
    `);

    hoverElements.forEach(el => {
        el.style.transition = 'all 0.3s cubic-bezier(0.4, 0, 0.2, 1)';
        
        el.addEventListener('mouseenter', () => {
            el.style.transform = 'translateY(-3px) scale(1.03)';
            el.style.boxShadow = '0 8px 15px rgba(0,0,0,0.2)';
        });

        el.addEventListener('mouseleave', () => {
            el.style.transform = 'translateY(0) scale(1)';
            el.style.boxShadow = 'none';
        });
    });

    console.log("Knights of Lothric: –í—Å–µ —Ñ—É–Ω–∫—Ü–∏–∏ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω—ã.");
});
